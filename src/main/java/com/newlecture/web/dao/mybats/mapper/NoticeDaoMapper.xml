<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlecture.web.dao.NoticeDao">
  <select id="getViewList" resultType="com.newlecture.web.entity.NoticeView">
    SELECT no
         , memberName
         , title
         , hit
         , createdDate
      FROM notice_view
<trim prefix="WHERE" prefixOverrides="AND | OR"> 
  <if test = "keyword != null or keyword != ''">
           ${field} LIKE '%${keyword}%'
  </if>
       AND isDisclose = #{isDisclose}
</trim>
     ORDER BY createdDate DESC
     LIMIT #{size}
    OFFSET #{offset}
  </select>
  
  <select id="getCount">
    SELECT count(no) AS totalCount
      FROM notice
     WHERE ${field} LIKE '%${keyword}%'
  </select>
  
  <select id="getView" resultType="com.newlecture.web.entity.NoticeView">
    SELECT no
         , memberName
         , title
         , content
         , hit
         , createdDate
      FROM notice_view
     WHERE no = #{no}
  </select>
  
  <select id="getNext" resultType="com.newlecture.web.entity.Notice">
    SELECT no
         , title
         , createdDate
      FROM notice
     WHERE created_date &gt; (
                           SELECT created_date
                             FROM notice
                            WHERE NO = #{no}
                          )
     LIMIT 1
  </select>
  
  <select id="getPrev" resultType="com.newlecture.web.entity.Notice">
    SELECT no
         , title
         , createdDate
      FROM notice
     WHERE created_date &lt; (
                           SELECT created_date
                             FROM notice
                            WHERE NO = #{no}
                          )
     ORDER BY created_date DESC
     LIMIT 1
  </select>
  
  <update id="update" parameterType="com.newlecture.web.entity.Notice">
    UPDATE notice
       SET title = #{title}
         , content = #{content}
         , updated_date = CURRENT_TIMESTAMP()
     WHERE NO = #{no}
  </update>
  
  <insert id="insert" parameterType="com.newlecture.web.entity.Notice">
    INSERT
      INTO notice (member_no, title, content)
    VALUES (#{memberNo}, #{title}, #{content})
  </insert>
  
  <delete id="delete">
    DELETE
      FROM notice
     WHERE NO = #{no}
  </delete>
  
  <delete id="deleteAll">
    DELETE
      FROM notice
     WHERE no in
<foreach item="no" index="index" collection="nos" open="(" separator="," close=")" nullable="true">
  #{no}
</foreach>
  </delete>
  
  <update id="updateDiscloseAll">
    UPDATE notice
       SET is_disclose = #{disclose}
     WHERE no in 
<foreach item="no" index="index" collection="nos" open="(" separator="," close=")" nullable="true">
  #{no}
</foreach>  
<!--     UPDATE notice
       SET is_disclose = CASE no
<foreach item="no" collection="disclosenos">
  WHEN #{no} THEN 1
</foreach>
<foreach item="no" collection="closenos">
  WHEN #{no} THEN 0
</foreach>       
       END
     WHERE no IN (
<foreach item="no" index="index" collection="disclosenos" separator=","  nullable="true">
  #{no}
</foreach>
                 ,
<foreach item="no" index="index" collection="closenos" separator=","  nullable="true">
  #{no}
</foreach>
                 ) -->
  </update>
</mapper>
